{"ast":null,"code":"var _jsxFileName = \"/Users/hanna.svintsitska/Desktop/proxyseller-test-task/src/users/cards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    searchValue,\n    sortingValue\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => setUsers(json));\n  }, []);\n  const processData = useMemo(() => {\n    return users.filter(user => {\n      return searchValue ? user === null || user === void 0 ? void 0 : user.name.toLowerCase().includes(searchValue.toLowerCase()) : true;\n    }).sort((user1, user2) => sortingValue === 'asc' ? user1.name.localeCompare(user2.name) : user2.name.localeCompare(user1.name));\n  }, [sortingValue, users, searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3 \",\n    children: processData.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col allCardsStyle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: el === null || el === void 0 ? void 0 : el.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${el.id}`,\n              className: \"card-link\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonLink\",\n                children: \"See all posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/albums/${el.id}`,\n              className: \"card-link\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonLink\",\n                children: \"See all albums\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, el === null || el === void 0 ? void 0 : el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"BIs5ffAz7A12SU4RCG1PnYZguMY=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Link","jsxDEV","_jsxDEV","Cards","_ref","_s","searchValue","sortingValue","users","setUsers","fetch","then","response","json","processData","filter","user","name","toLowerCase","includes","sort","user1","user2","localeCompare","className","children","map","el","fileName","_jsxFileName","lineNumber","columnNumber","to","id","_c","$RefreshReg$"],"sources":["/Users/hanna.svintsitska/Desktop/proxyseller-test-task/src/users/cards.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Cards = ({ searchValue, sortingValue }) => {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n  }, []);\n\n  const processData = useMemo(() => {\n    return users\n      .filter((user) => {\n        return searchValue\n          ? user?.name.toLowerCase().includes(searchValue.toLowerCase())\n          : true;\n      })\n      .sort((user1, user2) =>\n        sortingValue === 'asc'\n          ? user1.name.localeCompare(user2.name)\n          : user2.name.localeCompare(user1.name)\n      );\n  }, [sortingValue, users, searchValue]);\n  return (\n    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3 \">\n      {processData.map((el) => {\n        return (\n          <div className=\"col allCardsStyle\" key={el?.id}>\n            <div className=\"card shadow\">\n              <div className=\"header\">{el?.name}</div>\n              <div className=\"body buttons-container\">\n                <Link to={`/posts/${el.id}`} className=\"card-link\">\n                  <button className=\"buttonLink\">See all posts</button>\n                </Link>\n                <Link to={`/albums/${el.id}`} className=\"card-link\">\n                  <button className=\"buttonLink\">See all albums</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}